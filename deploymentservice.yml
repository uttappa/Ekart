# app worked successfull and able to access via LoadBalancer

apiVersion: apps/v1

kind: Deployment
metadata:
  name: ekart-app-try
  namespace: test-ns
  labels:
    app: ekart-app
spec:
  selector:
    matchLabels:
      app: ekart-app
  strategy:
   type: RollingUpdate
  replicas: 2
  template:
    metadata:
      labels:
        app: ekart-app  
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: ekart-app
        image: veda1998/ekart:4   #$BuildNumber
        imagePullPolicy: Always
        ports:
          - containerPort: 8070
          
        resources:
         requests:
           cpu: '400m'
           memory: '512Mi'
         limits:
          cpu: '700m'
          memory: '512Mi'
        readinessProbe:
          exec:
             command: 
             - curl
             - -v
             - http://localhost:8070

          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 20 
      imagePullSecrets:        #successfully pulled image from private repo (* - *)
       - name: docker-hub-cred  
    
---
apiVersion: v1
kind: Service
metadata:
  name: ekart-svc
  namespace: test-ns
spec:
  type: ClusterIP 
  selector:
    app: ekart-app
  ports:
    - protocol: "TCP"
      port: 8070
      targetPort: 8070

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: busy-box-ingress
  namespace: test-ns 
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: ac86f005e752a46a0bcb0fdae2bc66b7-1222175790.ap-south-1.elb.amazonaws.com
    http:
      paths:
      - pathType: Prefix
        path: "/nginx"
        backend:
          service:
            name: nginx-svc
            port: 
              number: 80
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ekart-svc
            port: 
              number: 8070


